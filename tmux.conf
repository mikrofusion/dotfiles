# set-option -g default-shell "/usr/bin/fish"

set -g prefix C-a
unbind C-b
bind C-a send-prefix

#set -g default-terminal "screen-256color"
set -g default-terminal "xterm"

set-option -g history-limit 10000

# tell tmux to use teh system keyboard (bash)
# install reattch via:  brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l bash"

set -s escape-time 0

# Act like vim
set -g status-keys vi
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Mouse stuff
set -g mode-mouse on
set -g mouse-select-window on
set -g mouse-resize-pane on
bind R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Center the window list
# set -g status-justify centre

# airline theme
source ~/.vim/tmux_line_theme

# needed to allow vim-tmux-navigator to work correctly
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind-key -n C-n next-window
bind-key -n C-p previous-window

# don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim
set -sg escape-time 0

# splits and new windows in current director
unbind '"'
bind '"' split-window -c "#{pane_current_path}"
unbind %
bind % split-window -h -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"
